{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<!DOCTYPE html>    <html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chennai Travel Guide</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <style>\n      * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        body {\n            background: linear-gradient(135deg, #1a1c20 0%, #2c3e50 100%);\n            height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n            color: #e0e0e0;\n        }\n\n        #chat-container {\n            width: 100%;\n            max-width: 800px;\n            height: 90vh;\n            background: #1e2124;\n            border-radius: 20px;\n            box-shadow: 0 10px 20px rgba(0,0,0,0.3);\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n        }\n\n        #chat-header {\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            padding: 20px;\n            display: flex;\n            align-items: center;\n            gap: 15px;\n        }\n\n        .bot-avatar {\n            width: 50px;\n            height: 50px;\n            background: rgba(255,255,255,0.1);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .bot-avatar i {\n            font-size: 24px;\n            color: white;\n        }\n\n        .header-text h1 {\n            font-size: 1.5rem;\n            margin-bottom: 5px;\n        }\n\n        .header-text p {\n            font-size: 0.9rem;\n            opacity: 0.9;\n        }\n\n        #chat-box {\n            flex: 1;\n            overflow-y: auto;\n            padding: 20px;\n            background: #2c2f33;\n        }\n\n        .message {\n            display: flex;\n            align-items: flex-start;\n            margin-bottom: 20px;\n            animation: fadeIn 0.3s ease-out;\n        }\n\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(10px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        .message-avatar {\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 12px;\n            flex-shrink: 0;\n        }\n\n        .bot-message .message-avatar {\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n        }\n\n        .user-message .message-avatar {\n            background: #40444b;\n            color: #ffffff;\n        }\n\n        .message-content {\n            background: #40444b;\n            padding: 12px 16px;\n            border-radius: 15px;\n            max-width: 70%;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n            color: #ffffff;\n            border: 2px solid #3d315b;  /* Added border to messages */\n        }\n\n        .bot-message .message-content {\n            background: #40444b;\n        }\n\n        .user-message {\n            flex-direction: row-reverse;\n        }\n\n        .user-message .message-content {\n            background: #3d315b;\n            color: white;\n            margin-right: 12px;\n        }\n\n        #input-box {\n            padding: 20px;\n            background: #1e2124;\n            border-top: 1px solid #40444b;\n            display: flex;\n            gap: 10px;\n        }\n\n        #user-input {\n            flex: 1;\n            padding: 12px 20px;\n            border: 2px solid #40444b;\n            border-radius: 25px;\n            outline: none;\n            font-size: 1rem;\n            transition: border-color 0.3s ease;\n            background: #40444b;\n            color: white;\n        }\n\n        #user-input::placeholder {\n            color: #a0a0a0;\n        }\n\n        #user-input:focus {\n            border-color: #3d315b;\n        }\n\n        #send-button {\n            width: 45px;\n            height: 45px;\n            border: none;\n            border-radius: 50%;\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: transform 0.2s ease;\n        }\n\n        #send-button:hover {\n            transform: scale(1.05);\n        }\n\n        #send-button:active {\n            transform: scale(0.95);\n        }\n\n        #chat-box::-webkit-scrollbar {\n            width: 8px;\n        }\n\n        #chat-box::-webkit-scrollbar-track {\n            background: #2c2f33;\n        }\n\n        #chat-box::-webkit-scrollbar-thumb {\n            background: #40444b;\n            border-radius: 4px;\n        }\n\n        #chat-box::-webkit-scrollbar-thumb:hover {\n            background: #4a4f57;\n        }\n\n        .quick-replies {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 8px;\n            margin-top: 10px;\n        }\n\n        .quick-reply-btn {\n            background: #40444b;\n            border: 2px solid #3d315b;  /* Enhanced button border */\n            color: #ffffff;\n            padding: 8px 16px;\n            border-radius: 20px;\n            cursor: pointer;\n            font-size: 0.9rem;\n            transition: all 0.2s ease;\n        }\n\n        .quick-reply-btn:hover {\n            background: #3d315b;\n            color: white;\n            transform: scale(1.05);\n        }\n\n        .typing-indicator {\n            display: flex;\n            gap: 4px;\n            padding: 8px 12px;\n            background: #40444b;\n            border-radius: 15px;\n            width: fit-content;\n            border: 2px solid #3d315b;  /* Added border to typing indicator */\n        }\n\n        .typing-dot {\n            width: 8px;\n            height: 8px;\n            background: #ffffff;\n            border-radius: 50%;\n            animation: typingAnimation 1.4s infinite ease-in-out;\n        }\n\n        .typing-dot:nth-child(2) {\n            animation-delay: 0.2s;\n        }\n\n        .typing-dot:nth-child(3) {\n            animation-delay: 0.4s;\n        }\n\n        @keyframes typingAnimation {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-4px); }\n        }\n\n        @media (max-width: 600px) {\n            #chat-container {\n                height: 100vh;\n                border-radius: 0;\n            }\n\n            body {\n                padding: 0;\n            }\n\n            .message-content {\n                max-width: 85%;\n            }\n\n            .header-text h1 {\n                font-size: 1.2rem;\n            }\n\n            .header-text p {\n                font-size: 0.8rem;\n            }\n}\n     \n\n        /* ... (keep all your original styles) ... */\n\n        /* Add new style for speak button */\n        #speak-button {\n            width: 45px;\n            height: 45px;\n            border: none;\n            border-radius: 50%;\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: transform 0.2s ease;\n            margin-right: 10px;\n        }\n\n        #speak-button:hover {\n            transform: scale(1.05);\n        }\n\n        #speak-button:active {\n            transform: scale(0.95);\n        }\n\n        #speak-button.speaking {\n            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\n        }\n    </style>\n</head>\n<body>\n    <div id=\"chat-container\">\n        <div id=\"chat-header\">\n            <div class=\"bot-avatar\">\n               <img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Animated Bot Avatar\">\n            </div>\n            <div class=\"header-text\">\n           <h2> Gayatri: Interactive Guide</h2>\n\t\t\t<p>Your personal travel assistant</p>\n            </div>\n        </div>\n        <div id=\"chat-box\">\n            <div class=\"message bot-message\">\n                <div class=\"message-avatar\">\n                    <img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Animated Bot Avatar\">\n                </div>\n                <div class=\"message-content\">\n                    Welcome to Chennai Travel Guide! Which language would you prefer?\n                    <div class=\"quick-replies\">\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('English')\">English</button>\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('Hindi')\">हिंदी</button>\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('German')\">Deutsch</button>\n\t\t\t\t\t<button class=\"quick-reply-btn\" onclick=\"selectLanguage('Tamil')\">\tதமிழ்</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div id=\"input-box\">\n            <button id=\"speak-button\" onclick=\"toggleSpeech()\">\n                <i class=\"fas fa-volume-up\"></i>\n            </button>\n            <input type=\"text\" id=\"user-input\" placeholder=\"Type your message here...\" onkeypress=\"handleKeyPress(event)\">\n            <button onclick=\"sendMessage()\" id=\"send-button\">\n                <i class=\"fas fa-paper-plane\"></i>\n            </button>\n        </div>\n    </div>\n</body>\n</html>",
      "status": "",
      "output": "    \n\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Chennai Travel Guide</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n    <style>\n      * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n        }\n\n        body {\n            background: linear-gradient(135deg, #1a1c20 0%, #2c3e50 100%);\n            height: 100vh;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 20px;\n            color: #e0e0e0;\n        }\n\n        #chat-container {\n            width: 100%;\n            max-width: 800px;\n            height: 90vh;\n            background: #1e2124;\n            border-radius: 20px;\n            box-shadow: 0 10px 20px rgba(0,0,0,0.3);\n            display: flex;\n            flex-direction: column;\n            overflow: hidden;\n        }\n\n        #chat-header {\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            padding: 20px;\n            display: flex;\n            align-items: center;\n            gap: 15px;\n        }\n\n        .bot-avatar {\n            width: 50px;\n            height: 50px;\n            background: rgba(255,255,255,0.1);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n\n        .bot-avatar i {\n            font-size: 24px;\n            color: white;\n        }\n\n        .header-text h1 {\n            font-size: 1.5rem;\n            margin-bottom: 5px;\n        }\n\n        .header-text p {\n            font-size: 0.9rem;\n            opacity: 0.9;\n        }\n\n        #chat-box {\n            flex: 1;\n            overflow-y: auto;\n            padding: 20px;\n            background: #2c2f33;\n        }\n\n        .message {\n            display: flex;\n            align-items: flex-start;\n            margin-bottom: 20px;\n            animation: fadeIn 0.3s ease-out;\n        }\n\n        @keyframes fadeIn {\n            from { opacity: 0; transform: translateY(10px); }\n            to { opacity: 1; transform: translateY(0); }\n        }\n\n        .message-avatar {\n            width: 35px;\n            height: 35px;\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 12px;\n            flex-shrink: 0;\n        }\n\n        .bot-message .message-avatar {\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n        }\n\n        .user-message .message-avatar {\n            background: #40444b;\n            color: #ffffff;\n        }\n\n        .message-content {\n            background: #40444b;\n            padding: 12px 16px;\n            border-radius: 15px;\n            max-width: 70%;\n            box-shadow: 0 2px 5px rgba(0,0,0,0.2);\n            color: #ffffff;\n            border: 2px solid #3d315b;  /* Added border to messages */\n        }\n\n        .bot-message .message-content {\n            background: #40444b;\n        }\n\n        .user-message {\n            flex-direction: row-reverse;\n        }\n\n        .user-message .message-content {\n            background: #3d315b;\n            color: white;\n            margin-right: 12px;\n        }\n\n        #input-box {\n            padding: 20px;\n            background: #1e2124;\n            border-top: 1px solid #40444b;\n            display: flex;\n            gap: 10px;\n        }\n\n        #user-input {\n            flex: 1;\n            padding: 12px 20px;\n            border: 2px solid #40444b;\n            border-radius: 25px;\n            outline: none;\n            font-size: 1rem;\n            transition: border-color 0.3s ease;\n            background: #40444b;\n            color: white;\n        }\n\n        #user-input::placeholder {\n            color: #a0a0a0;\n        }\n\n        #user-input:focus {\n            border-color: #3d315b;\n        }\n\n        #send-button {\n            width: 45px;\n            height: 45px;\n            border: none;\n            border-radius: 50%;\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: transform 0.2s ease;\n        }\n\n        #send-button:hover {\n            transform: scale(1.05);\n        }\n\n        #send-button:active {\n            transform: scale(0.95);\n        }\n\n        #chat-box::-webkit-scrollbar {\n            width: 8px;\n        }\n\n        #chat-box::-webkit-scrollbar-track {\n            background: #2c2f33;\n        }\n\n        #chat-box::-webkit-scrollbar-thumb {\n            background: #40444b;\n            border-radius: 4px;\n        }\n\n        #chat-box::-webkit-scrollbar-thumb:hover {\n            background: #4a4f57;\n        }\n\n        .quick-replies {\n            display: flex;\n            flex-wrap: wrap;\n            gap: 8px;\n            margin-top: 10px;\n        }\n\n        .quick-reply-btn {\n            background: #40444b;\n            border: 2px solid #3d315b;  /* Enhanced button border */\n            color: #ffffff;\n            padding: 8px 16px;\n            border-radius: 20px;\n            cursor: pointer;\n            font-size: 0.9rem;\n            transition: all 0.2s ease;\n        }\n\n        .quick-reply-btn:hover {\n            background: #3d315b;\n            color: white;\n            transform: scale(1.05);\n        }\n\n        .typing-indicator {\n            display: flex;\n            gap: 4px;\n            padding: 8px 12px;\n            background: #40444b;\n            border-radius: 15px;\n            width: fit-content;\n            border: 2px solid #3d315b;  /* Added border to typing indicator */\n        }\n\n        .typing-dot {\n            width: 8px;\n            height: 8px;\n            background: #ffffff;\n            border-radius: 50%;\n            animation: typingAnimation 1.4s infinite ease-in-out;\n        }\n\n        .typing-dot:nth-child(2) {\n            animation-delay: 0.2s;\n        }\n\n        .typing-dot:nth-child(3) {\n            animation-delay: 0.4s;\n        }\n\n        @keyframes typingAnimation {\n            0%, 100% { transform: translateY(0); }\n            50% { transform: translateY(-4px); }\n        }\n\n        @media (max-width: 600px) {\n            #chat-container {\n                height: 100vh;\n                border-radius: 0;\n            }\n\n            body {\n                padding: 0;\n            }\n\n            .message-content {\n                max-width: 85%;\n            }\n\n            .header-text h1 {\n                font-size: 1.2rem;\n            }\n\n            .header-text p {\n                font-size: 0.8rem;\n            }\n}\n     \n\n        /* ... (keep all your original styles) ... */\n\n        /* Add new style for speak button */\n        #speak-button {\n            width: 45px;\n            height: 45px;\n            border: none;\n            border-radius: 50%;\n            background: linear-gradient(135deg, #2c3e50 0%, #3d315b 100%);\n            color: white;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            transition: transform 0.2s ease;\n            margin-right: 10px;\n        }\n\n        #speak-button:hover {\n            transform: scale(1.05);\n        }\n\n        #speak-button:active {\n            transform: scale(0.95);\n        }\n\n        #speak-button.speaking {\n            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);\n        }\n    </style>\n\n\n    <div id=\"chat-container\">\n        <div id=\"chat-header\">\n            <div class=\"bot-avatar\">\n               <img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Animated Bot Avatar\">\n            </div>\n            <div class=\"header-text\">\n           <h2> Gayatri: Interactive Guide</h2>\n\t\t\t<p>Your personal travel assistant</p>\n            </div>\n        </div>\n        <div id=\"chat-box\">\n            <div class=\"message bot-message\">\n                <div class=\"message-avatar\">\n                    <img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Animated Bot Avatar\">\n                </div>\n                <div class=\"message-content\">\n                    Welcome to Chennai Travel Guide! Which language would you prefer?\n                    <div class=\"quick-replies\">\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('English')\">English</button>\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('Hindi')\">हिंदी</button>\n                        <button class=\"quick-reply-btn\" onclick=\"selectLanguage('German')\">Deutsch</button>\n\t\t\t\t\t<button class=\"quick-reply-btn\" onclick=\"selectLanguage('Tamil')\">\tதமிழ்</button>\n                    </div>\n                </div>\n            </div>\n        <div class=\"message user-message\"><div class=\"message-avatar\"><i class=\"fas fa-user\"></i></div><div class=\"message-content\">Selected language: English</div></div><div class=\"message bot-message\"><div class=\"message-avatar\"><img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Bot Avatar\" style=\"width: 35px; height: 37px; display=\" flex\"=\"\"></div><div class=\"message-content\">Great! I'll help you explore Chennai in English. What would you like to know about?</div></div></div>\n        <div id=\"input-box\">\n            <button id=\"speak-button\" onclick=\"toggleSpeech()\">\n                <i class=\"fas fa-volume-up\"></i>\n            </button>\n            <input type=\"text\" id=\"user-input\" placeholder=\"Type your message here...\" onkeypress=\"handleKeyPress(event)\">\n            <button onclick=\"sendMessage()\" id=\"send-button\">\n                <i class=\"fas fa-paper-plane\"></i>\n            </button>\n        </div>\n    </div>\n\n",
      "type": "html"
    },
    {
      "code": "\n\nlet selectedLanguage = '';\n        let isSpeaking = false;\n        let speechQueue = [];\n\n        // Initialize speech synthesis\n        window.speechSynthesis.onvoiceschanged = function() {\n            voices = window.speechSynthesis.getVoices();\n        };\n        let voices = [];\n\n        function toggleSpeech() {\n            const speakButton = document.getElementById('speak-button');\n            if (window.speechSynthesis.speaking) {\n                window.speechSynthesis.cancel();\n                speakButton.classList.remove('speaking');\n                isSpeaking = false;\n            } else {\n                speakButton.classList.add('speaking');\n                isSpeaking = true;\n                // Speak the last bot message if available\n                const botMessages = document.querySelectorAll('.bot-message .message-content');\n                if (botMessages.length > 0) {\n                    const lastMessage = botMessages[botMessages.length - 1].textContent;\n                    speakMessage(lastMessage);\n                }\n            }\n        }\n\n        function speakMessage(text) {\n            if (!isSpeaking) return;\n\n            const utterance = new SpeechSynthesisUtterance(text);\n            \n            // Select voice based on language\n            const voices = window.speechSynthesis.getVoices();\n            switch(selectedLanguage) {\n                case 'Hindi':\n                    utterance.lang = 'hi-IN';\n                    break;\n                case 'German':\n                    utterance.lang = 'de-DE';\n                    break;\n\t\t\t  \tcase 'Tamil':\n\t\t\t\t\tutterance.lang = 'ta-IN';\n\t\t\t\tbreak;\n                default:\n                    utterance.lang = 'en-GB';\n            }\n\n            utterance.onend = function() {\n                document.getElementById('speak-button').classList.remove('speaking');\n            };\n\n            utterance.onerror = function() {\n                document.getElementById('speak-button').classList.remove('speaking');\n            };\n\n            window.speechSynthesis.speak(utterance);\n        }\n\n        // Modify your existing appendMessage function to include speech\n        function appendMessage(message, sender) {\n            const chatBox = document.getElementById('chat-box');\n            const messageDiv = document.createElement('div');\n            messageDiv.className = `message ${sender}-message`;\n            \n            const avatarDiv = document.createElement('div');\n          avatarDiv.className = 'message-avatar';\nif (sender === 'bot') {\n    avatarDiv.innerHTML = `<img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Bot Avatar\" style=\"width: 35px; height: 37px; display=\"flex\">`;\n} else {\n    avatarDiv.innerHTML = `<i class=\"fas fa-user\"></i>`;\n}\n\n            const contentDiv = document.createElement('div');\n            contentDiv.className = 'message-content';\n            contentDiv.textContent = message;\n            \n            messageDiv.appendChild(avatarDiv);\n            messageDiv.appendChild(contentDiv);\n            chatBox.appendChild(messageDiv);\n            \n            chatBox.scrollTop = chatBox.scrollHeight;\n\n            // Speak bot messages if speech is enabled\n            if (sender === 'bot' && isSpeaking) {\n                speakMessage(message);\n            }\n        }\n\n        // Your existing functions remain the same\n async function processInput(input) {\n    input = input.toLowerCase();\n    let response = await getGeminiResponse(input);\n    response = response.replace(/\\\\/g, '');\n    response = response.replace(/[^a-zA-Z0-9\\s\\u0900-\\u097F\\u0B80-\\u0BFF]/g, '');  \n\n    return response;\n}\n\n\n        async function getGeminiResponse(userInput) {\n             const YOUR_API_KEY = 'AIzaSyCtB3_w3CEAkxMVt8sF9o1PNFFryCRkqmY';\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${YOUR_API_KEY}`;\n    \n    const requestBody = {\n        contents: [\n            {\n                parts: [\n                    { text: userInput + ` (respond in ${selectedLanguage})` }\n                ]\n            }\n        ]\n    };\n    \n    try {\n        const response = await fetch(apiUrl, {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(requestBody)\n        });\n        \n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        \n        const data = await response.json();\n        \n        if (data.candidates && data.candidates[0] && data.candidates[0].content && data.candidates[0].content.parts[0].text) {\n            return data.candidates[0].content.parts[0].text.replace(/\\\\(.?)\\\\*/g, \"$1\").trim();\n        } else {\n            return \"Sorry, I couldn't find an answer to that.\";\n        }\n    } catch (error) {\n        console.log(\"There was a problem with the fetch operation:\", error);\n        return \"Sorry, I couldn't understand that.\";\n\t}\n        }\n\n        async function sendMessage() {\n            // ... (your existing sendMessage code)\n\t\t   const input = document.getElementById('user-input');\n    const message = input.value.trim();\n    \n    if (message) {\n        appendMessage(message, 'user');\n        input.value = '';\n        \n        // Show typing indicator\n        const typingIndicator = document.createElement('div');\n        typingIndicator.className = 'message bot-message typing-indicator';\n        typingIndicator.innerHTML = `\n            <div class=\"message-avatar\">\n                 <img src=\"https://sharedp.com/wp-content/uploads/2024/06/cute-dp-for-girls-cartoon-960x1024.jpg\" alt=\"Bot Avatar\" style=\"width: 35px; height:37px; display=\"flex\">;\n            </div>\n            <div class=\"message-content\">\n                <div class=\"typing-indicator\">\n                    <div class=\"typing-dot\"></div>\n                    <div class=\"typing-dot\"></div>\n                    <div class=\"typing-dot\"></div>\n                </div>\n            </div>`\n        document.getElementById('chat-box').appendChild(typingIndicator);\n\n        // Process the message and get response\n        const response = await processInput(message);\n        \n        // Remove typing indicator\n        typingIndicator.remove();\n        \n        // Display the response\n        appendMessage(response, 'bot');\n\t}\n        }\n\n        function selectLanguage(language) {\n            // ... (your existing selectLanguage code)\n\t\t   selectedLanguage = language;\n    const message = `Selected language: ${language}`;\n    appendMessage(message, 'user');\n    \n\n  let botResponse = '';\n    switch(language) {\n        case 'English':\n            botResponse = \"Great! I'll help you explore Chennai in English. What would you like to know about?\";\n            break;\n        case 'Hindi':\n            botResponse = \"बढ़िया! मैं आपकी चेन्नई की यात्रा में मदद करूंगा। आप क्या जानना चाहेंगे?\";\n            break;\n        case 'German':\n            botResponse = \"Ausgezeichnet! Ich helfe Ihnen gerne dabei, Chennai zu erkunden. Was möchten Sie wissen?\";\n            break;\n\t\t case 'Tamil':\n            botResponse = \"வணக்கம் சென்னையில் பயணம் செய்ய நான் உங்களுக்கு எப்படி உதவ முடியும்\";\n            break;\n    }\n    \n    setTimeout(() => {\n        appendMessage(botResponse, 'bot');\n    }, 500);\n        }\n\n        function handleKeyPress(event) {\n            // ... (your existing handleKeyPress code)\n\t\t  if (event.key === 'Enter') {\n        sendMessage();\n\t\t  }\n        }\n   ",
      "status": "[6]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "function() {\n            voices = window.speechSynthesis.getVoices();\n        } <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}